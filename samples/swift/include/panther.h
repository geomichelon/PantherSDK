// PantherSDK FFI header
#include <stdint.h>
#include <stddef.h>

#ifndef PANTHER_SDK_H
#define PANTHER_SDK_H

#pragma once

/* Generated with cbindgen:0.29.0 */

// Generated by cbindgen. Do not edit.

int32_t panther_init(void);

double panther_metrics_bleu(const char *reference, const char *candidate);

double panther_metrics_accuracy(const char *expected, const char *generated);

double panther_metrics_coherence(const char *text);

double panther_metrics_diversity(const char *samples_json);

double panther_metrics_fluency(const char *text);

double panther_metrics_rouge_l(const char *reference, const char *candidate);

double panther_metrics_fact_coverage(const char *facts_json, const char *candidate);

int32_t panther_metrics_record(const char *name, double value);

char *panther_bias_detect(const char *samples_json);

int32_t panther_storage_save_metric(const char *name, double value, int64_t timestamp_ms);

char *panther_storage_get_history(const char *metric);

char *panther_storage_export(const char *format_c);

char *panther_storage_list_metrics(void);

char *panther_logs_get(void);

char *panther_logs_get_recent(void);

char *panther_version_string(void);

char *panther_agent_run(const char *plan_json_c, const char *input_json_c);

char *panther_agent_start(const char *plan_json_c, const char *input_json_c);

char *panther_agent_poll(const char *run_id_c, const char *cursor_c);

char *panther_agent_status(const char *run_id_c);

char *panther_agent_result(const char *run_id_c);

char *panther_generate(const char *prompt_c);

void panther_free_string(char *s);

char *panther_validation_run_custom_with_proof(const char *prompt_c,
                                               const char *providers_json_c,
                                               const char *guidelines_json_c);

char *panther_validation_run_default(const char *prompt_c);

char *panther_validation_run_multi_with_proof(const char *prompt_c, const char *providers_json_c);

char *panther_validation_run_custom_with_proof(const char *prompt_c,
                                               const char *providers_json_c,
                                               const char *guidelines_json_c);

char *panther_proof_compute(const char *prompt_c,
                            const char *providers_json_c,
                            const char *guidelines_json_c,
                            const char *results_json_c,
                            const char *salt_c);

int32_t panther_proof_verify_local(const char *prompt_c,
                                   const char *providers_json_c,
                                   const char *guidelines_json_c,
                                   const char *results_json_c,
                                   const char *salt_c,
                                   const char *proof_json_c);

char *panther_proof_anchor_eth(const char *proof_hash_hex_c,
                               const char *rpc_url_c,
                               const char *contract_addr_c,
                               const char *privkey_c);

char *panther_proof_check_eth(const char *proof_hash_hex_c,
                              const char *rpc_url_c,
                              const char *contract_addr_c);

char *panther_validation_run_openai(const char *prompt_c,
                                    const char *api_key_c,
                                    const char *model_c,
                                    const char *base_c);

char *panther_validation_run_ollama(const char *prompt_c, const char *base_c, const char *model_c);

char *panther_validation_run_multi(const char *prompt_c, const char *providers_json_c);

char *panther_validation_run_custom(const char *prompt_c,
                                    const char *providers_json_c,
                                    const char *guidelines_json_c);

#endif  /* PANTHER_SDK_H */
